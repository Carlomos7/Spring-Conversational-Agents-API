name: conversational-agents

services:
  # --- Postgres
  db:
    image: pgvector/pgvector:pg16
    container_name: agents-db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - db_data:/var/lib/postgresql/data
    networks: [appnet]

  # --- pgAdmin
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: agents-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks: [appnet]

  # --- App: DEFAULT local dev
  app:
    image: eclipse-temurin:21-jdk
    container_name: conversational-agents-local
    working_dir: /workspace
    entrypoint: []  # ensure no jar ENTRYPOINT is inherited
    command: ["./mvnw","spring-boot:run","-Dspring-boot.run.profiles=compose"]
    volumes:
      - ./:/workspace
      - ~/.m2:/root/.m2
    env_file: .env
    environment:
      SPRING_PROFILES_ACTIVE: compose
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL}
      SERVER_PORT: ${SERVER_PORT:-8080}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks: [appnet]

  # --- App image: DEV PROFILE
  app-image:
    profiles: ["dev"]
    build:
      context: .
    container_name: conversational-agents-app
    env_file: .env
    environment:
      SPRING_PROFILES_ACTIVE: compose
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL}
      SERVER_PORT: ${SERVER_PORT:-8080}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks: [appnet]

volumes:
  db_data:
  pgadmin_data:

networks:
  appnet:
    driver: bridge
