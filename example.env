# example.env  — Copy to ONE of:
#   - .env          → Used by Docker Compose (auto-loaded for variable expansion)
#   - .env.local    → Used by Spring when running locally via Maven/IDE
#                      (because application-local.yaml imports .env.local)
#
# WHAT TO KEEP / EXCLUDE
# If copying to .env (Docker Compose):
#   KEEP: POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_PORT,
#         OPENAI_API_KEY, OPENAI_MODEL, SERVER_PORT, PGADMIN_* (optional)
#   EXCLUDE/COMMENT: SPRING_PROFILES_ACTIVE, POSTGRES_HOST, SPRING_DATASOURCE_URL
#     (Compose provides the in-network host 'db'; the app container uses profile 'compose'
#      via compose.yaml, not here.)
#
# If copying to .env.local (Maven/IDE local dev):
#   KEEP: SPRING_PROFILES_ACTIVE=local, POSTGRES_HOST, POSTGRES_PORT,
#         POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD,
#         (optionally) SPRING_DATASOURCE_URL, SERVER_PORT, OPENAI_*
#   EXCLUDE/COMMENT: PGADMIN_* (only needed for Compose)

# -----------------------------
# SHARED DEFAULTS (safe anywhere)
# -----------------------------
POSTGRES_DB=agentsdb
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_PORT=5432

OPENAI_API_KEY=replace_me
OPENAI_MODEL=gpt-4o-mini

SERVER_PORT=8080

# ---------------------------------
# LOCAL-ONLY (Maven/IDE) — UNCOMMENT
# when copying to .env.local
# ---------------------------------
# SPRING_PROFILES_ACTIVE=local
# POSTGRES_HOST=localhost
# SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# ---------------------------------
# COMPOSE-ONLY (Docker) — UNCOMMENT
# when copying to .env
# ---------------------------------
# PGADMIN_DEFAULT_EMAIL=admin@example.com
# PGADMIN_DEFAULT_PASSWORD=admin

# NOTES:
# - For Docker Compose, do NOT set POSTGRES_HOST here; inside the Docker network
#   the Postgres hostname is 'db'. Your compose.yaml already wires:
#     SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
#   in the app service environment, so you don't need to duplicate it here.